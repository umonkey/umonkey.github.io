{"version":3,"file":"SvelteToast.svelte_svelte_type_style_lang.CHfARvnT.js","sources":["../../../../../../node_modules/@zerodevx/svelte-toast/dist/stores.js"],"sourcesContent":["import { writable } from 'svelte/store'\n\n/**\n * @typedef {import('svelte').ComponentType} SvelteComponent\n */\n\n/**\n * @typedef {import('svelte/transition').FlyParams} FlyParams\n */\n\n/**\n * @typedef {Object} SvelteToastCustomComponent\n * @property {SvelteComponent} src - custom Svelte Component\n * @property {Object<string,any>} [props] - props to pass into custom component\n * @property {string} [sendIdTo] - forward toast id to prop name\n */\n\n/**\n * @callback SvelteToastOnPopCallback\n * @param {number} [id] - optionally get the toast id if needed\n * @param {object} [details]\n */\n\n/**\n * @typedef {Object} SvelteToastOptions\n * @property {number} [id] - unique id generated for every toast\n * @property {string} [target] - container target name to send toast to\n * @property {string} [msg] - toast message\n * @property {number} [duration] - duration of progress bar tween from initial to next\n * @property {number} [initial] - initial progress bar value\n * @property {number} [next] - next progress bar value\n * @property {boolean} [pausable] - pause progress bar tween on mouse hover\n * @property {boolean} [dismissable] - allow dissmiss with close button\n * @property {boolean} [reversed] - display toasts in reverse order\n * @property {FlyParams} [intro] - toast intro fly animation settings\n * @property {Object<string,string|number>} [theme] - css var overrides\n * @property {string[]} [classes] - user-defined classes\n * @property {SvelteToastOnPopCallback} [onpop] - callback that runs on toast dismiss\n * @property {SvelteToastCustomComponent} [component] - send custom Svelte Component as a message\n * @property {number} [progress] - DEPRECATED\n */\n\n/** @type {SvelteToastOptions} */\nconst defaults = {\n  duration: 4000,\n  initial: 1,\n  next: 0,\n  pausable: false,\n  dismissable: true,\n  reversed: false,\n  intro: { x: 256 }\n}\n\nfunction createToast() {\n  const { subscribe, update } = writable(new Array())\n  /** @type {Object<string,SvelteToastOptions>} */\n  const options = {}\n  let count = 0\n\n  /** @param {any} obj */\n  function _obj(obj) {\n    return obj instanceof Object\n  }\n\n  function _init(target = 'default', opts = {}) {\n    options[target] = opts\n    return options\n  }\n\n  /**\n   * Send a new toast\n   * @param {(string|SvelteToastOptions)} msg\n   * @param {SvelteToastOptions} [opts]\n   * @returns {number}\n   */\n  function push(msg, opts) {\n    const param = {\n      target: 'default',\n      ...(_obj(msg) ? /** @type {SvelteToastOptions} */ (msg) : { ...opts, msg })\n    }\n    const conf = options[param.target] || {}\n    const entry = {\n      ...defaults,\n      ...conf,\n      ...param,\n      theme: { ...conf.theme, ...param.theme },\n      classes: [...(conf.classes || []), ...(param.classes || [])],\n      id: ++count\n    }\n    update((n) => (entry.reversed ? [...n, entry] : [entry, ...n]))\n    return count\n  }\n\n  /**\n   * Remove toast(s)\n   * - toast.pop() // removes the last toast\n   * - toast.pop(0) // remove all toasts\n   * - toast.pop(id) // removes the toast with specified `id`\n   * - toast.pop({ target: 'foo' }) // remove all toasts from target `foo`\n   * @param {(number|Object<'target',string>)} [id]\n   */\n  function pop(id) {\n    update((n) => {\n      if (!n.length || id === 0) return []\n      // Filter function is deprecated; shim added for backward compatibility\n      if (typeof id === 'function') return n.filter((i) => id(i))\n      if (_obj(id))\n        return n.filter(/** @type {SvelteToastOptions[]} i */ (i) => i.target !== id.target)\n      const found = id || Math.max(...n.map((i) => i.id))\n      return n.filter((i) => i.id !== found)\n    })\n  }\n\n  /**\n   * Update an existing toast\n   * @param {(number|SvelteToastOptions)} id\n   * @param {SvelteToastOptions} [opts]\n   */\n  function set(id, opts) {\n    /** @type {any} */\n    const param = _obj(id) ? id : { ...opts, id }\n    update((n) => {\n      const idx = n.findIndex((i) => i.id === param.id)\n      if (idx > -1) {\n        n[idx] = { ...n[idx], ...param }\n      }\n      return n\n    })\n  }\n\n  return { subscribe, push, pop, set, _init }\n}\n\nexport const toast = createToast()\n"],"names":["defaults","createToast","subscribe","update","writable","options","count","_obj","obj","_init","target","opts","push","msg","param","conf","entry","n","pop","id","i","found","set","idx","toast"],"mappings":"kWA2CA,MAAMA,EAAW,CACf,SAAU,IACV,QAAS,EACT,KAAM,EACN,SAAU,GACV,YAAa,GACb,SAAU,GACV,MAAO,CAAE,EAAG,GAAG,CACjB,EAEA,SAASC,GAAc,CACrB,KAAM,CAAE,UAAAC,EAAW,OAAAC,CAAQ,EAAGC,EAAS,IAAI,KAAO,EAE5CC,EAAU,CAAA,EAChB,IAAIC,EAAQ,EAGZ,SAASC,EAAKC,EAAK,CACjB,OAAOA,aAAe,MAC1B,CAEE,SAASC,EAAMC,EAAS,UAAWC,EAAO,CAAA,EAAI,CAC5C,OAAAN,EAAQK,CAAM,EAAIC,EACXN,CACX,CAQE,SAASO,EAAKC,EAAKF,EAAM,CACvB,MAAMG,EAAQ,CACZ,OAAQ,UACR,GAAIP,EAAKM,CAAG,EAAuCA,EAAO,CAAE,GAAGF,EAAM,IAAAE,CAAK,CAChF,EACUE,EAAOV,EAAQS,EAAM,MAAM,GAAK,CAAA,EAChCE,EAAQ,CACZ,GAAGhB,EACH,GAAGe,EACH,GAAGD,EACH,MAAO,CAAE,GAAGC,EAAK,MAAO,GAAGD,EAAM,KAAO,EACxC,QAAS,CAAC,GAAIC,EAAK,SAAW,CAAA,EAAK,GAAID,EAAM,SAAW,CAAA,CAAG,EAC3D,GAAI,EAAER,CACZ,EACI,OAAAH,EAAQc,GAAOD,EAAM,SAAW,CAAC,GAAGC,EAAGD,CAAK,EAAI,CAACA,EAAO,GAAGC,CAAC,CAAE,EACvDX,CACX,CAUE,SAASY,EAAIC,EAAI,CACfhB,EAAQ,GAAM,CACZ,GAAI,CAAC,EAAE,QAAUgB,IAAO,EAAG,MAAO,CAAA,EAElC,GAAI,OAAOA,GAAO,WAAY,OAAO,EAAE,OAAQC,GAAMD,EAAGC,CAAC,CAAC,EAC1D,GAAIb,EAAKY,CAAE,EACT,OAAO,EAAE,OAA8CC,GAAMA,EAAE,SAAWD,EAAG,MAAM,EACrF,MAAME,EAAQF,GAAM,KAAK,IAAI,GAAG,EAAE,IAAKC,GAAMA,EAAE,EAAE,CAAC,EAClD,OAAO,EAAE,OAAQA,GAAMA,EAAE,KAAOC,CAAK,CACtC,CAAA,CACL,CAOE,SAASC,EAAIH,EAAIR,EAAM,CAErB,MAAMG,EAAQP,EAAKY,CAAE,EAAIA,EAAK,CAAE,GAAGR,EAAM,GAAAQ,CAAE,EAC3ChB,EAAQc,GAAM,CACZ,MAAMM,EAAMN,EAAE,UAAWG,GAAMA,EAAE,KAAON,EAAM,EAAE,EAChD,OAAIS,EAAM,KACRN,EAAEM,CAAG,EAAI,CAAE,GAAGN,EAAEM,CAAG,EAAG,GAAGT,CAAK,GAEzBG,CACR,CAAA,CACL,CAEE,MAAO,CAAE,UAAAf,EAAW,KAAAU,EAAM,IAAAM,EAAK,IAAAI,EAAK,MAAAb,CAAK,CAC3C,CAEY,MAACe,EAAQvB,EAAW","x_google_ignoreList":[0]}