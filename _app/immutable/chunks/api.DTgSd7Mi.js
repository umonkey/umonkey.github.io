var d=Object.defineProperty;var g=(s,e,t)=>e in s?d(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var i=(s,e,t)=>g(s,typeof e!="symbol"?e+"":e,t);import{i as p,a as h}from"./auth.CRT65m0h.js";import{ab as y,ac as l,ad as u}from"./index.D2QBpCmX.js";import"./disclose-version.vMxi1LYk.js";import{b as f}from"./env.D6bh-OuW.js";(function(){try{var s=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},e=new s.Error().stack;e&&(s._sentryDebugIds=s._sentryDebugIds||{},s._sentryDebugIds[e]="7e088202-2125-48e7-8400-4e564c43de3b",s._sentryDebugIdIdentifier="sentry-dbid-7e088202-2125-48e7-8400-4e564c43de3b")}catch{}})();const c=l({}),$=y(c,s=>e=>s[e]??void 0),w=s=>{c.update(e=>{for(const t of s)e[t.id]=t;return e})};class b{constructor(){i(this,"root");this.root=f,console.debug(`[api] Root: ${this.root}`)}async getTree(e){console.debug(`[api] Getting tree ${e}`);const t=await this.request("GET",`v1/trees/${e}`);return t.status===200&&w(t.data.users),t}async getStats(){return console.debug("[api] Getting stats"),await this.request("GET","v1/trees/stats")}async getMe(e){return await this.request("GET","v1/me",{headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}})}async getMarkers(e,t,a,n,r){const o=new URLSearchParams({n:e.toString(),e:t.toString(),s:a.toString(),w:n.toString()});return r&&o.set("search",r),await this.request("GET","v1/trees?"+o.toString())}async loginWithGoogle(e){return console.debug("[api] Logging in with Google"),await this.request("POST","v2/login/google",{body:JSON.stringify({token:e}),headers:{"Content-Type":"application/json"}})}async updateTree(e,t){return await this.request("PUT",`v1/trees/${e}`,{body:JSON.stringify(t),headers:{"Content-Type":"application/json",...this.getAuthHeaders()}})}async addComment(e,t){const a={"Content-Type":"application/json",...this.getAuthHeaders()};return await this.request("POST",`v1/trees/${e}/comments`,{body:JSON.stringify({message:t}),headers:a})}async uploadFile(e,t){const a={"Content-Type":"application/json",...this.getAuthHeaders()},n=await t.arrayBuffer(),r=new Blob([n],{type:t.type});return await this.request("POST",`v1/trees/${e}/files`,{body:r,headers:a})}async searchSpecies(e){const t=new URLSearchParams({query:e});return await this.request("GET",`v1/species/search?${t}`)}async getTreeComments(e){return await this.request("GET",`v1/trees/${e}/comments`)}async request(e,t,a){console.debug(`[api] Requesting ${e} ${this.root}${t}`);const n=new Request(this.root+t,{method:e,...a}),r=await fetch(n),o=r.status==202?void 0:await r.json();return{status:r.status,data:o}}getAuthHeaders(){var e;if(u(p)){const t=(e=u(h))==null?void 0:e.token;if(t)return{Authorization:`Bearer ${t}`}}return{}}}const G=new b;export{G as a,w as b,$ as g};
