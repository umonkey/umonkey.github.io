var g=Object.defineProperty;var c=(s,t,e)=>t in s?g(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var o=(s,t,e)=>c(s,typeof t!="symbol"?t+"":t,e);import{i as h,a as p}from"./auth.DCNBl5R4.js";import{g as i}from"./index.CFeJIACE.js";class d{constructor(){o(this,"root");this.root="https://yerevan.treemaps.app/",console.debug(`[api] Root: ${this.root}`)}async getTree(t){return console.debug(`[api] Getting tree ${t}`),await this.request("GET",`v1/trees/${t}`)}async getStats(){return console.debug("[api] Getting stats"),await this.request("GET","v1/trees/stats")}async getMarkers(t,e,n,a){const r=new URLSearchParams({n:t.toString(),e:e.toString(),s:n.toString(),w:a.toString()});return await this.request("GET","v1/trees?"+r.toString())}async loginWithGoogle(t){return console.debug("[api] Logging in with Google"),await this.request("POST","v2/login/google",{body:JSON.stringify({token:t}),headers:{"Content-Type":"application/json"}})}async updateTree(t,e){return await this.request("PUT",`v1/trees/${t}`,{body:JSON.stringify(e),headers:{"Content-Type":"application/json",...this.getAuthHeaders()}})}async addComment(t,e){const n={"Content-Type":"application/json",...this.getAuthHeaders()};return await this.request("POST",`v1/trees/${t}/comments`,{body:JSON.stringify({message:e}),headers:n})}async request(t,e,n){console.debug(`[api] Requesting ${t} ${this.root}${e}`);const a=new Request(this.root+e,{method:t,...n}),r=await fetch(a),u=r.status==202?void 0:await r.json();return{status:r.status,data:u}}getAuthHeaders(){var t;if(i(h)){const e=(t=i(p))==null?void 0:t.token;if(e)return{Authorization:`Bearer ${e}`}}return{}}}const S=new d;export{S as a};
