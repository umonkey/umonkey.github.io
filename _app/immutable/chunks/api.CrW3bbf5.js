var p=Object.defineProperty;var d=(e,t,s)=>t in e?p(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s;var u=(e,t,s)=>d(e,typeof t!="symbol"?t+"":t,s);import{a as l,s as y,S as f,b as h,h as g,o as b}from"./trace.BqOobQqQ.js";import{c as w}from"./exports.qj7JG69I.js";import{i as T,a as m}from"./auth.DqoLYEfd.js";import{aC as c}from"./index.DA0p4cwN.js";import{b as S}from"./env.Bea2fBXJ.js";import"./disclose-version.Do00YCK8.js";(function(){try{var e=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},t=new e.Error().stack;t&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[t]="685fbbaa-5e09-4612-9932-5b283473198c",e._sentryDebugIdIdentifier="sentry-dbid-685fbbaa-5e09-4612-9932-5b283473198c")}catch{}})();function _(e){if(e==null||typeof e!="object")return!1;const t="location"in e&&typeof e.location=="string",s="status"in e&&typeof e.status=="number"&&e.status>=300&&e.status<=308;return t&&s}function E(e){return typeof e=="object"&&e!==null&&"status"in e&&"body"in e}function v(e){const t=b(e);return _(t)||E(t)&&t.status<500&&t.status>=400||w(t,{mechanism:{type:"sveltekit",handled:!1,data:{function:"load"}}}),t}function N(e){return new Proxy(e,{apply:(t,s,a)=>{const n=a[0];if(n.__sentry_wrapped__)return t.apply(s,a);const o={...n};l(o,"__sentry_wrapped__",!0);const r=n.route&&Object.getOwnPropertyDescriptor(n.route,"id"),i=r&&r.value||n.route.id;return y({op:"function.sveltekit.load",attributes:{[f]:"auto.function.sveltekit",[h]:i?"route":"url"},name:i||n.url.pathname},()=>g(()=>t.apply(s,[o]),v))}})}class I{constructor(){u(this,"root");this.root=S,console.debug(`[api] Root: ${this.root}`)}async getTree(t){return console.debug(`[api] Getting tree ${t}`),await this.request("GET",`v1/trees/${t}`)}async getStats(){return console.debug("[api] Getting stats"),await this.request("GET","v1/trees/stats")}async getMe(t){return await this.request("GET","v1/me",{headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`}})}async getMarkers(t,s,a,n,o){const r=new URLSearchParams({n:t.toString(),e:s.toString(),s:a.toString(),w:n.toString()});return o&&r.set("search",o),await this.request("GET","v1/trees?"+r.toString())}async loginWithGoogle(t){return console.debug("[api] Logging in with Google"),await this.request("POST","v2/login/google",{body:JSON.stringify({token:t}),headers:{"Content-Type":"application/json"}})}async updateTree(t,s){return await this.request("PUT",`v1/trees/${t}`,{body:JSON.stringify(s),headers:{"Content-Type":"application/json",...this.getAuthHeaders()}})}async addComment(t,s){const a={"Content-Type":"application/json",...this.getAuthHeaders()};return await this.request("POST",`v1/trees/${t}/comments`,{body:JSON.stringify({message:s}),headers:a})}async uploadFile(t,s){const a={"Content-Type":"application/json",...this.getAuthHeaders()},n=await s.arrayBuffer(),o=new Blob([n],{type:s.type});return await this.request("POST",`v1/trees/${t}/files`,{body:o,headers:a})}async request(t,s,a){console.debug(`[api] Requesting ${t} ${this.root}${s}`);const n=new Request(this.root+s,{method:t,...a}),o=await fetch(n),r=o.status==202?void 0:await o.json();return{status:o.status,data:r}}getAuthHeaders(){var t;if(c(T)){const s=(t=c(m))==null?void 0:t.token;if(s)return{Authorization:`Bearer ${s}`}}return{}}}const P=new I;export{P as a,N as w};
//# sourceMappingURL=api.CrW3bbf5.js.map
