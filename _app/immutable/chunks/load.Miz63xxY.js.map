{"version":3,"file":"load.Miz63xxY.js","sources":["../../../../../../node_modules/@sentry/sveltekit/build/esm/common/utils.js","../../../../../../node_modules/@sentry/sveltekit/build/esm/client/load.js"],"sourcesContent":["/**\n * Determines if a thrown \"error\" is a Redirect object which SvelteKit users can throw to redirect to another route\n * see: https://kit.svelte.dev/docs/modules#sveltejs-kit-redirect\n * @param error the potential redirect error\n */\nfunction isRedirect(error) {\n  if (error == null || typeof error !== 'object') {\n    return false;\n  }\n  const hasValidLocation = 'location' in error && typeof error.location === 'string';\n  const hasValidStatus =\n    'status' in error && typeof error.status === 'number' && error.status >= 300 && error.status <= 308;\n  return hasValidLocation && hasValidStatus;\n}\n\n/**\n * Determines if a thrown \"error\" is a HttpError\n */\nfunction isHttpError(err) {\n  return typeof err === 'object' && err !== null && 'status' in err && 'body' in err;\n}\n\nexport { isHttpError, isRedirect };\n//# sourceMappingURL=utils.js.map\n","import { addNonEnumerableProperty, startSpan, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, handleCallbackErrors, objectify } from '@sentry/core';\nimport { captureException } from '@sentry/svelte';\nimport { isRedirect, isHttpError } from '../common/utils.js';\n\nfunction sendErrorToSentry(e) {\n  // In case we have a primitive, wrap it in the equivalent wrapper class (string -> String, etc.) so that we can\n  // store a seen flag on it.\n  const objectifiedErr = objectify(e);\n\n  // We don't want to capture thrown `Redirect`s as these are not errors but expected behaviour\n  // Neither 4xx errors, given that they are not valuable.\n  if (\n    isRedirect(objectifiedErr) ||\n    (isHttpError(objectifiedErr) && objectifiedErr.status < 500 && objectifiedErr.status >= 400)\n  ) {\n    return objectifiedErr;\n  }\n\n  captureException(objectifiedErr, {\n    mechanism: {\n      type: 'sveltekit',\n      handled: false,\n      data: {\n        function: 'load',\n      },\n    },\n  });\n\n  return objectifiedErr;\n}\n\n/**\n * Wrap load function with Sentry. This wrapper will\n *\n * - catch errors happening during the execution of `load`\n * - create a load span if performance monitoring is enabled\n * - attach tracing Http headers to `fetch` requests if performance monitoring is enabled to get connected traces.\n * - add a fetch breadcrumb for every `fetch` request\n *\n * Note that tracing Http headers are only attached if the url matches the specified `tracePropagationTargets`\n * entries to avoid CORS errors.\n *\n * @param origLoad SvelteKit user defined load function\n */\n// The liberal generic typing of `T` is necessary because we cannot let T extend `Load`.\n// This function needs to tell TS that it returns exactly the type that it was called with\n// because SvelteKit generates the narrowed down `PageLoad` or `LayoutLoad` types\n// at build time for every route.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrapLoadWithSentry(origLoad) {\n  return new Proxy(origLoad, {\n    apply: (wrappingTarget, thisArg, args) => {\n      // Type casting here because `T` cannot extend `Load` (see comment above function signature)\n      const event = args[0] ;\n\n      // Check if already wrapped\n      if (event.__sentry_wrapped__) {\n        return wrappingTarget.apply(thisArg, args);\n      }\n\n      const patchedEvent = {\n        ...event,\n      };\n\n      addNonEnumerableProperty(patchedEvent , '__sentry_wrapped__', true);\n\n      // Accessing any member of `event.route` causes SvelteKit to invalidate the\n      // client-side universal `load` function's data prefetched data, causing another reload on the actual navigation.\n      // To work around this, we use `Object.getOwnPropertyDescriptor` which doesn't invoke the proxy.\n      const routeIdDescriptor = event.route && Object.getOwnPropertyDescriptor(event.route, 'id');\n      // First, we try to access the route id from the property descriptor.\n      // This will only work for @sveltejs/kit >= 1.24.0\n      const routeIdFromDescriptor = routeIdDescriptor && (routeIdDescriptor.value );\n      // If routeIdFromDescriptor is undefined, we fall back to the old behavior of accessing\n      // `event.route.id` directly. This will still cause invalidations but we get a route name.\n      const routeId = routeIdFromDescriptor || event.route.id;\n\n      return startSpan(\n        {\n          op: 'function.sveltekit.load',\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.function.sveltekit',\n            [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: routeId ? 'route' : 'url',\n          },\n          name: routeId ? routeId : event.url.pathname,\n        },\n        () => handleCallbackErrors(() => wrappingTarget.apply(thisArg, [patchedEvent]), sendErrorToSentry),\n      );\n    },\n  });\n}\n\nexport { wrapLoadWithSentry };\n//# sourceMappingURL=load.js.map\n"],"names":["isRedirect","error","hasValidLocation","hasValidStatus","isHttpError","err","sendErrorToSentry","e","objectifiedErr","objectify","captureException","wrapLoadWithSentry","origLoad","wrappingTarget","thisArg","args","event","patchedEvent","addNonEnumerableProperty","routeIdDescriptor","routeId","startSpan","SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN","SEMANTIC_ATTRIBUTE_SENTRY_SOURCE","handleCallbackErrors"],"mappings":"8aAKA,SAASA,EAAWC,EAAO,CACzB,GAAIA,GAAS,MAAQ,OAAOA,GAAU,SACpC,MAAO,GAET,MAAMC,EAAmB,aAAcD,GAAS,OAAOA,EAAM,UAAa,SACpEE,EACJ,WAAYF,GAAS,OAAOA,EAAM,QAAW,UAAYA,EAAM,QAAU,KAAOA,EAAM,QAAU,IAClG,OAAOC,GAAoBC,CAC7B,CAKA,SAASC,EAAYC,EAAK,CACxB,OAAO,OAAOA,GAAQ,UAAYA,IAAQ,MAAQ,WAAYA,GAAO,SAAUA,CACjF,CChBA,SAASC,EAAkBC,EAAG,CAG5B,MAAMC,EAAiBC,EAAUF,CAAC,EAIlC,OACEP,EAAWQ,CAAc,GACxBJ,EAAYI,CAAc,GAAKA,EAAe,OAAS,KAAOA,EAAe,QAAU,KAK1FE,EAAiBF,EAAgB,CAC/B,UAAW,CACT,KAAM,YACN,QAAS,GACT,KAAM,CACJ,SAAU,MACX,CACF,CACL,CAAG,EAEMA,CACT,CAoBA,SAASG,EAAmBC,EAAU,CACpC,OAAO,IAAI,MAAMA,EAAU,CACzB,MAAO,CAACC,EAAgBC,EAASC,IAAS,CAExC,MAAMC,EAAQD,EAAK,CAAC,EAGpB,GAAIC,EAAM,mBACR,OAAOH,EAAe,MAAMC,EAASC,CAAI,EAG3C,MAAME,EAAe,CACnB,GAAGD,CACJ,EAEDE,EAAyBD,EAAe,qBAAsB,EAAI,EAKlE,MAAME,EAAoBH,EAAM,OAAS,OAAO,yBAAyBA,EAAM,MAAO,IAAI,EAMpFI,EAHwBD,GAAsBA,EAAkB,OAG7BH,EAAM,MAAM,GAErD,OAAOK,EACL,CACE,GAAI,0BACJ,WAAY,CACV,CAACC,CAAgC,EAAG,0BACpC,CAACC,CAAgC,EAAGH,EAAU,QAAU,KACzD,EACD,KAAMA,GAAoBJ,EAAM,IAAI,QACrC,EACD,IAAMQ,EAAqB,IAAMX,EAAe,MAAMC,EAAS,CAACG,CAAY,CAAC,EAAGX,CAAiB,CAClG,CACF,CACL,CAAG,CACH","x_google_ignoreList":[0,1]}