{"version":3,"file":"api.D8c_OKvc.js","sources":["../../../../../../src/lib/env.ts","../../../../../../src/lib/api.ts"],"sourcesContent":["export const API_ROOT = import.meta.env.VITE_API_ROOT;\nexport const AUTH_CALLBACK = import.meta.env.VITE_AUTH_CALLBACK;\nexport const AUTH_CLIENT_ID =\n\timport.meta.env.VITE_AUTH_CLIENT_ID ??\n\t'999312923392-6k26jala2pe5dk9u7o63o8nvts3a7f1f.apps.googleusercontent.com';\n","import type {\n\tILoginResponse,\n\tIMeResponse,\n\tIMarkers,\n\tIStats,\n\tITree,\n\tITreeUpdatePayload\n} from '$lib/types';\nimport { isAuthenticated, authState } from '$lib/stores/auth';\nimport { get } from 'svelte/store';\nimport { API_ROOT } from '$lib/env';\n\ninterface Response<T> {\n\tstatus: number;\n\tdata: T;\n}\n\nexport class ApiClient {\n\tprivate root: string;\n\n\tconstructor() {\n\t\tthis.root = API_ROOT;\n\t\tconsole.debug(`[api] Root: ${this.root}`);\n\t}\n\n\tpublic async getTree(id: string): Promise<Response<ITree>> {\n\t\tconsole.debug(`[api] Getting tree ${id}`);\n\t\treturn await this.request('GET', `v1/trees/${id}`);\n\t}\n\n\tpublic async getStats(): Promise<Response<IStats>> {\n\t\tconsole.debug(`[api] Getting stats`);\n\t\treturn await this.request('GET', 'v1/trees/stats');\n\t}\n\n\tpublic async getMe(token: string): Promise<Response<IMeResponse>> {\n\t\treturn await this.request('GET', 'v1/me', {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${token}`\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async getMarkers(\n\t\tn: number,\n\t\te: number,\n\t\ts: number,\n\t\tw: number,\n\t\tsearch?: string | undefined\n\t): Promise<Response<IMarkers>> {\n\t\tconst params = new URLSearchParams({\n\t\t\tn: n.toString(),\n\t\t\te: e.toString(),\n\t\t\ts: s.toString(),\n\t\t\tw: w.toString()\n\t\t});\n\n\t\tif (search) {\n\t\t\tparams.set('search', search);\n\t\t}\n\n\t\treturn await this.request('GET', 'v1/trees?' + params.toString());\n\t}\n\n\tpublic async loginWithGoogle(token: string): Promise<Response<ILoginResponse>> {\n\t\tconsole.debug('[api] Logging in with Google');\n\n\t\treturn await this.request('POST', 'v2/login/google', {\n\t\t\tbody: JSON.stringify({ token }),\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async updateTree(id: string, props: ITreeUpdatePayload): Promise<Response<ITree>> {\n\t\treturn await this.request('PUT', `v1/trees/${id}`, {\n\t\t\tbody: JSON.stringify(props),\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t...this.getAuthHeaders()\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async addComment(id: string, message: string): Promise<Response<void>> {\n\t\tconst headers: HeadersInit = {\n\t\t\t'Content-Type': 'application/json',\n\t\t\t...this.getAuthHeaders()\n\t\t};\n\n\t\treturn await this.request('POST', `v1/trees/${id}/comments`, {\n\t\t\tbody: JSON.stringify({ message }),\n\t\t\theaders\n\t\t});\n\t}\n\n\t/**\n\t * Send a raw request to the API.\n\t *\n\t * @docs https://developer.mozilla.org/en-US/docs/Web/API/RequestInit\n\t */\n\tprivate async request<T>(\n\t\tmethod: string,\n\t\tpath: string,\n\t\toptions?: RequestInit\n\t): Promise<Response<T>> {\n\t\tconsole.debug(`[api] Requesting ${method} ${this.root}${path}`);\n\n\t\tconst request = new Request(this.root + path, {\n\t\t\tmethod,\n\t\t\t...options\n\t\t});\n\n\t\tconst response = await fetch(request);\n\t\tconst data = response.status == 202 ? undefined : await response.json();\n\n\t\treturn {\n\t\t\tstatus: response.status,\n\t\t\tdata\n\t\t};\n\t}\n\n\tprivate getAuthHeaders(): HeadersInit {\n\t\tif (get(isAuthenticated)) {\n\t\t\tconst token = get(authState)?.token;\n\n\t\t\tif (token) {\n\t\t\t\treturn {\n\t\t\t\t\tAuthorization: `Bearer ${token}`\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn {};\n\t}\n}\n\nexport const apiClient = new ApiClient();\n"],"names":["API_ROOT","AUTH_CALLBACK","AUTH_CLIENT_ID","ApiClient","__publicField","id","token","n","e","s","w","search","params","props","message","headers","method","path","options","request","response","data","get","isAuthenticated","_a","authState","apiClient"],"mappings":"2lBAAa,MAAAA,EAAW,OACXC,EAAgB,OAChBC,EAEZ,2ECaM,MAAMC,CAAU,CAGtB,aAAc,CAFNC,EAAA,aAGP,KAAK,KAAOJ,EACZ,QAAQ,MAAM,eAAe,KAAK,IAAI,EAAE,CAAA,CAGzC,MAAa,QAAQK,EAAsC,CAClD,eAAA,MAAM,sBAAsBA,CAAE,EAAE,EACjC,MAAM,KAAK,QAAQ,MAAO,YAAYA,CAAE,EAAE,CAAA,CAGlD,MAAa,UAAsC,CAClD,eAAQ,MAAM,qBAAqB,EAC5B,MAAM,KAAK,QAAQ,MAAO,gBAAgB,CAAA,CAGlD,MAAa,MAAMC,EAA+C,CACjE,OAAO,MAAM,KAAK,QAAQ,MAAO,QAAS,CACzC,QAAS,CACR,eAAgB,mBAChB,cAAe,UAAUA,CAAK,EAAA,CAC/B,CACA,CAAA,CAGF,MAAa,WACZC,EACAC,EACAC,EACAC,EACAC,EAC8B,CACxB,MAAAC,EAAS,IAAI,gBAAgB,CAClC,EAAGL,EAAE,SAAS,EACd,EAAGC,EAAE,SAAS,EACd,EAAGC,EAAE,SAAS,EACd,EAAGC,EAAE,SAAS,CAAA,CACd,EAED,OAAIC,GACIC,EAAA,IAAI,SAAUD,CAAM,EAGrB,MAAM,KAAK,QAAQ,MAAO,YAAcC,EAAO,UAAU,CAAA,CAGjE,MAAa,gBAAgBN,EAAkD,CAC9E,eAAQ,MAAM,8BAA8B,EAErC,MAAM,KAAK,QAAQ,OAAQ,kBAAmB,CACpD,KAAM,KAAK,UAAU,CAAE,MAAAA,EAAO,EAC9B,QAAS,CACR,eAAgB,kBAAA,CACjB,CACA,CAAA,CAGF,MAAa,WAAWD,EAAYQ,EAAqD,CACxF,OAAO,MAAM,KAAK,QAAQ,MAAO,YAAYR,CAAE,GAAI,CAClD,KAAM,KAAK,UAAUQ,CAAK,EAC1B,QAAS,CACR,eAAgB,mBAChB,GAAG,KAAK,eAAe,CAAA,CACxB,CACA,CAAA,CAGF,MAAa,WAAWR,EAAYS,EAA0C,CAC7E,MAAMC,EAAuB,CAC5B,eAAgB,mBAChB,GAAG,KAAK,eAAe,CACxB,EAEA,OAAO,MAAM,KAAK,QAAQ,OAAQ,YAAYV,CAAE,YAAa,CAC5D,KAAM,KAAK,UAAU,CAAE,QAAAS,EAAS,EAChC,QAAAC,CAAA,CACA,CAAA,CAQF,MAAc,QACbC,EACAC,EACAC,EACuB,CACf,QAAA,MAAM,oBAAoBF,CAAM,IAAI,KAAK,IAAI,GAAGC,CAAI,EAAE,EAE9D,MAAME,EAAU,IAAI,QAAQ,KAAK,KAAOF,EAAM,CAC7C,OAAAD,EACA,GAAGE,CAAA,CACH,EAEKE,EAAW,MAAM,MAAMD,CAAO,EAC9BE,EAAOD,EAAS,QAAU,IAAM,OAAY,MAAMA,EAAS,KAAK,EAE/D,MAAA,CACN,OAAQA,EAAS,OACjB,KAAAC,CACD,CAAA,CAGO,gBAA8B,OACjC,GAAAC,EAAIC,CAAe,EAAG,CACnB,MAAAjB,GAAQkB,EAAAF,EAAIG,CAAS,IAAb,YAAAD,EAAgB,MAE9B,GAAIlB,EACI,MAAA,CACN,cAAe,UAAUA,CAAK,EAC/B,CACD,CAGD,MAAO,CAAC,CAAA,CAEV,CAEa,MAAAoB,EAAY,IAAIvB"}