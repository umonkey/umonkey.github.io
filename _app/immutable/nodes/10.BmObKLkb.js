import"../chunks/entry.nRwFojhL.js";import{w as p}from"../chunks/load.CWJQYR6K.js";import{a as l}from"../chunks/api.B1sL70KO.js";import{e as d}from"../chunks/index.C0xb9aZP.js";import{a as m,t as u}from"../chunks/disclose-version.DA9WmjDN.js";import{Q as g,M as y,R as b,t as _,aB as v,N as a,_ as h}from"../chunks/index.DRxbb0_q.js";import{h as w}from"../chunks/svelte-head.CoDOZH0p.js";import{H as T}from"../chunks/Header.MdRXlY4r.js";import{T as I,a as D,M as x}from"../chunks/Menu.D4b1rmpb.js";(function(){try{var e=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},t=new e.Error().stack;t&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[t]="cc5f6699-7a16-4026-bcba-14c086dfc3ee",e._sentryDebugIdIdentifier="sentry-dbid-cc5f6699-7a16-4026-bcba-14c086dfc3ee")}catch{}})();const c=async({params:e})=>{const t=e.id;t||d(400,{message:"Tree id not specified."});const r=await l.getTree(t);return r.status!==200&&d(404,{message:"Error fetching tree."}),{id:t,tree:r.data}},M=c?p(c):void 0,L=Object.freeze(Object.defineProperty({__proto__:null,load:M},Symbol.toStringTag,{value:"Module"}));var $=u('<!> <!> <!> <!> <p class="svelte-5xy3vn">No history of changes for this tree yet.</p> <p class="svelte-5xy3vn">(This area is under construction.)</p>',1);function P(e,t){g(t,!0);const r=t.data.tree;var s=$();w(S=>{_(()=>v.title=`${r.species??""} - Details`)});var o=y(s);T(o,{title:"Tree"});var i=a(o,2);I(i,{get title(){return r.species}});var n=a(i,2);D(n,{get tree(){return r.id},active:"history"});var f=a(n,2);x(f,{get id(){return r.id}}),h(4),m(e,s),b()}export{P as component,L as universal};
//# sourceMappingURL=10.BmObKLkb.js.map
