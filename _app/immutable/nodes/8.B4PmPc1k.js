import{e as J}from"../chunks/index.CzR0xuCU.js";import{a as V}from"../chunks/api.BlGb2U4K.js";import{a as C,t as T}from"../chunks/disclose-version.CLZNo6Mi.js";import{aJ as X,t as Y,U as y,T as o,V as S,aO as Z,W as ee,aF as m,K,S as L,X as te,P as l,ac as _}from"../chunks/utils.BFcvIjER.js";import{i as ae,p as g,a as i}from"../chunks/props.xLB6besP.js";import{g as re}from"../chunks/entry.BPk_L4t5.js";import{r as ne}from"../chunks/routes.Du5GAGsL.js";import"../chunks/legacy.j8GUzb4P.js";import{t as N}from"../chunks/SvelteToast.svelte_svelte_type_style_lang.CwQvoe9r.js";import{A as le}from"../chunks/AuthWrapper.2V3BbZJl.js";import{T as h,B as U}from"../chunks/Button.CSDBrNmp.js";import{l as oe}from"../chunks/store.MZmcVWKZ.js";import{H as ue}from"../chunks/Header.CcdmL7Ww.js";function G(e,a,t){if(e.multiple)return ve(e,a);for(var r of e.options){var n=k(r);if(ae(n,a)){r.selected=!0;return}}(!t||a!==void 0)&&(e.selectedIndex=-1)}function se(e,a){X(()=>{var t=new MutationObserver(()=>{var r=e.__value;G(e,r)});return t.observe(e,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["value"]}),()=>{t.disconnect()}})}function ie(e,a,t=a){var r=!0;oe(e,"change",n=>{var u=n?"[selected]":":checked",v;if(e.multiple)v=[].map.call(e.querySelectorAll(u),k);else{var c=e.querySelector(u)??e.querySelector("option:not([disabled])");v=c&&k(c)}t(v)}),X(()=>{var n=a();if(G(e,n,r),r&&n===void 0){var u=e.querySelector(":checked");u!==null&&(n=k(u),t(n))}e.__value=n,r=!1}),se(e)}function ve(e,a){for(var t of e.options)t.selected=~a.indexOf(k(t))}function k(e){return"__value"in e?e.__value:e.value}const ce=async({params:e})=>{const a=e.id;a||J(404);const t=await V.getTree(a);return t.status!==200&&J(404),{id:a,tree:t.data}},Me=Object.freeze(Object.defineProperty({__proto__:null,load:ce},Symbol.toStringTag,{value:"Module"}));function de(e,a){let t=g(a,"value",12,"");h(e,{label:"Species",placeholder:"Enter the name of the tree",hint:"Please use latin names when possible.",get value(){return t()},set value(r){t(r)},$$legacy:!0})}function pe(e,a){let t=g(a,"value",12,"");h(e,{label:"Height, m",type:"number",get value(){return t()},set value(r){t(r)},$$legacy:!0})}function fe(e,a){let t=g(a,"value",12,"");h(e,{label:"Canopy diameter, m",type:"number",get value(){return t()},set value(r){t(r)},$$legacy:!0})}function me(e,a){let t=g(a,"value",12,"");h(e,{label:"Trunk circumference, cm",type:"number",hint:"Measure at chest level, aka 120 cm from the ground.",get value(){return t()},set value(r){t(r)},$$legacy:!0})}var _e=T('<div class="input"><label class="svelte-a4sar6"><span class="svelte-a4sar6">State</span> <select class="svelte-a4sar6"><option>(unknown)</option><option>healthy</option><option>sick</option><option>deformed</option><option>gone</option><option>stomp</option></select></label></div>');function ge(e,a){let t=g(a,"value",12,"");var r=_e(),n=y(r),u=o(y(n),2);Y(()=>{t(),Z(()=>{})});var v=y(u);v.value=((v.__value="")==null,"");var c=o(v);c.value=(c.__value="healthy")==null?"":"healthy";var d=o(c);d.value=(d.__value="sick")==null?"":"sick";var p=o(d);p.value=(p.__value="deformed")==null?"":"deformed";var b=o(p);b.value=(b.__value="gone")==null?"":"gone";var I=o(b);I.value=(I.__value="stomp")==null?"":"stomp",S(u),S(n),S(r),ie(u,t),C(e,r)}function he(e,a){let t=g(a,"value",12,"");h(e,{label:"Address",hint:"This is normally set automatically when adding a tree, but you can edit.",get value(){return t()},set value(r){t(r)},$$legacy:!0})}function be(e,a){let t=g(a,"value",12,"");h(e,{label:"Description",multiline:!0,hint:"Add some notable details that could help visitors understand the importance of this tree.",get value(){return t()},set value(r){t(r)},$$legacy:!0})}var ye=T('<!> <!> <!> <!> <!> <!> <!> <div class="buttons svelte-sr3ino"><!> <!></div>',1),Se=T('<!> <div class="form svelte-sr3ino"><!></div>',1);function je(e,a){var q,w,x;ee(a,!0);const t=a.data.id;let r=m(i(a.data.tree.species??"")),n=m(i(((q=a.data.tree.height)==null?void 0:q.toString())??"0")),u=m(i(((w=a.data.tree.diameter)==null?void 0:w.toString())??"0")),v=m(i(((x=a.data.tree.circumference)==null?void 0:x.toString())??"0")),c=m(i(a.data.tree.state??"")),d=m(""),p=m(i(a.data.tree.notes??""));K(()=>{console.debug("Species changed to:",l(r))}),K(()=>{console.debug("Address changed to:",l(d))});const b=()=>{V.updateTree(t,{species:l(r),height:parseFloat(l(n)),diameter:parseFloat(l(u)),circumference:parseFloat(l(v)),state:l(c),address:l(d),notes:l(p)}).then(f=>{f.status>=200&&f.status<400?re(ne.treeDetails(t)):(console.error(`Error ${f.status} updating tree.`),N.push("Error updating tree."))}).catch(f=>{console.error(`Error updating tree: ${f}.`),N.push("Error updating tree.")})},I=()=>{history.back()};var A=Se(),E=L(A);ue(E,{title:"Edit tree"});var $=o(E,2),Q=y($);le(Q,{children:(f,ke)=>{var F=ye(),O=L(F);de(O,{get value(){return l(r)},set value(s){_(r,i(s))}});var H=o(O,2);pe(H,{get value(){return l(n)},set value(s){_(n,i(s))}});var P=o(H,2);fe(P,{get value(){return l(u)},set value(s){_(u,i(s))}});var M=o(P,2);me(M,{get value(){return l(v)},set value(s){_(v,i(s))}});var j=o(M,2);ge(j,{get value(){return l(c)},set value(s){_(c,i(s))}});var B=o(j,2);he(B,{get value(){return l(d)},set value(s){_(d,i(s))}});var D=o(B,2);be(D,{get value(){return l(p)},set value(s){_(p,i(s))}});var W=o(D,2),z=y(W);U(z,{type:"submit",label:"Save changes",onClick:b});var R=o(z,2);U(R,{type:"cancel",label:"Cancel",onClick:I}),S(W),C(f,F)},$$slots:{default:!0}}),S($),C(e,A),te()}export{je as component,Me as universal};
