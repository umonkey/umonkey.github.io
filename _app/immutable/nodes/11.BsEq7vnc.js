import"../chunks/entry.H2d7xo9k.js";import{a as c,w as l}from"../chunks/api.YGaO-OxF.js";import{e as d}from"../chunks/index.CFGGz30R.js";import"../chunks/disclose-version.BuaYvhyZ.js";import{R as m,N as u,T as g,t as b,aB as y,O as a,$ as v}from"../chunks/index.CbWQdyPD.js";import{h as _}from"../chunks/svelte-head.DlRxUE2U.js";import{a as h,t as T}from"../chunks/template.FARQGre2.js";import{H as w}from"../chunks/Header.B2iSxPiH.js";import{T as I,a as D,M as $}from"../chunks/Menu.DbceHUz7.js";(function(){try{var e=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},t=new e.Error().stack;t&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[t]="96e3ab56-0604-4bd7-afe5-2a3f5ae32b39",e._sentryDebugIdIdentifier="sentry-dbid-96e3ab56-0604-4bd7-afe5-2a3f5ae32b39")}catch{}})();const f=async({params:e})=>{const t=e.id;t||d(400,{message:"Tree id not specified."});const r=await c.getTree(t);return r.status!==200&&d(404,{message:"Error fetching tree."}),{id:t,tree:r.data}},x=f?l(f):void 0,L=Object.freeze(Object.defineProperty({__proto__:null,load:x},Symbol.toStringTag,{value:"Module"}));var M=T('<!> <!> <!> <!> <p class="svelte-5xy3vn">No history of changes for this tree yet.</p> <p class="svelte-5xy3vn">(This area is under construction.)</p>',1);function P(e,t){m(t,!0);const r=t.data.tree;var s=M();_(O=>{b(()=>y.title=`${r.species??""} - Details`)});var o=u(s);w(o,{title:"Tree"});var i=a(o,2);I(i,{get title(){return r.species}});var n=a(i,2);D(n,{get tree(){return r.id},active:"history"});var p=a(n,2);$(p,{get id(){return r.id}}),v(4),h(e,s),g()}export{P as component,L as universal};
