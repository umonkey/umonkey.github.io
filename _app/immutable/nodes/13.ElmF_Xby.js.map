{"version":3,"file":"13.ElmF_Xby.js","sources":["../../../../../../src/routes/tree/[id=treeid]/upload/+page.ts?sentry-auto-wrap","../../../../../../src/routes/tree/[id=treeid]/upload/+page.ts","../../../../../../src/lib/stores/fileStore.ts","../../../../../../src/lib/utils/fileUploader.ts","../../../../../../src/lib/components/forms/FilePicker.svelte","../../../../../../src/routes/tree/[id=treeid]/upload/+page.svelte"],"sourcesContent":["import type { Load } from '@sveltejs/kit';\n\nexport const load: Load = ({\n\tparams\n}): Promise<{\n\tid: string;\n}> => {\n\treturn {\n\t\tid: params.id\n\t};\n};\n","import { wrapLoadWithSentry } from \"@sentry/sveltekit\";import * as userModule from \"/home/hex/src/umonkey/treemap/frontend-v2/src/routes/tree/[id=treeid]/upload/+page.ts?sentry-auto-wrap\";export const load = userModule.load ? wrapLoadWithSentry(userModule.load) : undefined;export * from \"/home/hex/src/umonkey/treemap/frontend-v2/src/routes/tree/[id=treeid]/upload/+page.ts?sentry-auto-wrap\";","import { writable, derived } from 'svelte/store';\n\ntype IStore = {\n\tfiles: File[];\n\tuploading: boolean;\n\tprogress: number;\n\tmessage: string | null;\n};\n\nexport const fileStore = writable<IStore>({\n\tfiles: [],\n\tuploading: false,\n\tprogress: 0,\n\tmessage: null\n});\n\nexport const storedFiles = derived(fileStore, (fileStore) => fileStore.files);\nexport const isUploading = derived(fileStore, (fileStore) => fileStore.uploading);\nexport const uploadProgress = derived(fileStore, (fileStore) => fileStore.progress);\nexport const uploadMessage = derived(fileStore, (fileStore) => fileStore.message);\n","import { get } from 'svelte/store';\nimport { fileStore } from '$lib/stores/fileStore';\nimport { apiClient } from '$lib/api';\n\nconst uploadSingleFile = async (file: File, tree: string) => {\n\tawait apiClient.uploadFile(tree, file);\n\tconsole.info(`[upload] Uploaded ${file.name}.`);\n};\n\nexport const startUpload = async (tree: string) => {\n\tconst count = get(fileStore).files.length;\n\tconst files = get(fileStore).files;\n\tconst retry = [];\n\n\tconst totalSize = files.length;\n\tlet uploadedSize = 0;\n\n\tconsole.debug(`[upload] Going to upload ${count} files for tree ${tree}.`);\n\n\tfileStore.update((store) => {\n\t\tstore.message = null;\n\t\treturn store;\n\t});\n\n\ttry {\n\t\tfileStore.update((store) => {\n\t\t\tstore.uploading = true;\n\t\t\treturn store;\n\t\t});\n\n\t\tfor (const file of files) {\n\t\t\tconsole.debug(`[upload] Uploading ${file.name}...`);\n\n\t\t\ttry {\n\t\t\t\tawait uploadSingleFile(file, tree);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(`[upload] Failed to upload ${file.name}: ${e}`);\n\t\t\t\tretry.push(file);\n\t\t\t} finally {\n\t\t\t\tuploadedSize++;\n\n\t\t\t\tfileStore.update((store) => {\n\t\t\t\t\tstore.progress = (uploadedSize / totalSize) * 100;\n\t\t\t\t\treturn store;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tconsole.debug('[upload] Finished.');\n\n\t\tfileStore.update((store) => {\n\t\t\tstore.files = retry;\n\t\t\tstore.uploading = false;\n\t\t\treturn store;\n\t\t});\n\t}\n\n\tfileStore.update((store) => {\n\t\tstore.message =\n\t\t\t'Finished uploading all photos. They will show up on the tree page shortly. You can upload more files if needed.';\n\t\treturn store;\n\t});\n};\n","<script lang=\"ts\">\n\tlet input;\n\n\texport let disabled = false;\n\texport let onFileSelected: (files: File[]) => void;\n\n\tconst onClick = () => {\n\t\tinput.click();\n\t};\n\n\tconst onChange = (event) => {\n\t\tif (event.target.files.length > 0) {\n\t\t\tonFileSelected(event.target.files);\n\t\t}\n\t};\n</script>\n\n<div>\n\t<button {disabled} type=\"button\" class=\"button\" onclick={onClick}>Add photos</button>\n\t<input type=\"file\" accept=\"image/jpeg\" bind:this={input} onchange={onChange} multiple />\n</div>\n\n<style>\n\tinput {\n\t\tdisplay: none;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { fileStore, storedFiles, isUploading, uploadMessage } from '$lib/stores/fileStore';\n\timport { startUpload } from '$lib/utils/fileUploader';\n\n\timport Header from '$lib/components/tree/Header.svelte';\n\timport FilePicker from '$lib/components/forms/FilePicker.svelte';\n\timport CloseIcon from '$lib/icons/CloseIcon.svelte';\n\n\tconst { data } = $props();\n\tconst treeId = data.id;\n\n\tconst onFileSelected = (selected: File[]) => {\n\t\tfileStore.update((store) => {\n\t\t\tstore.files = [...store.files, ...selected];\n\t\t\treturn store;\n\t\t});\n\t};\n\n\tconst removeFile = (index: number) => {\n\t\tconsole.debug(`Removing file at index ${index}.`);\n\n\t\tfileStore.update((store) => {\n\t\t\tconst newFiles = [...store.files];\n\t\t\tnewFiles.splice(index, 1);\n\t\t\tstore.files = newFiles;\n\t\t\treturn store;\n\t\t});\n\t};\n</script>\n\n<svelte:head>\n\t<title>Upload tree photos</title>\n</svelte:head>\n\n<Header title=\"Upload photos\" />\n\n<div class=\"form\">\n\t<p>Here you can upload multiple photos of this tree.</p>\n\n\t{#if $uploadMessage}\n\t\t<p>{$uploadMessage}</p>\n\t{/if}\n\n\t<div class=\"buttons\">\n\t\t<FilePicker {onFileSelected} disabled={$isUploading} />\n\t\t<button\n\t\t\tdisabled={!($storedFiles.length > 0 && !$isUploading)}\n\t\t\tclass=\"button\"\n\t\t\ttype=\"button\"\n\t\t\tonclick={() => startUpload(treeId)}>Upload</button\n\t\t>\n\t</div>\n\n\t{#if $storedFiles.length > 0}\n\t\t<h2>Selected photos:</h2>\n\n\t\t<div class=\"grid\">\n\t\t\t{#each $storedFiles as file, idx}\n\t\t\t\t<div class=\"preview\">\n\t\t\t\t\t<img src={URL.createObjectURL(file)} alt=\"preview\" />\n\t\t\t\t\t<button class=\"close\" onclick={() => removeFile(idx)}>\n\t\t\t\t\t\t<CloseIcon width={24} height={24} />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t</div>\n\t{/if}\n</div>\n\n<style>\n\t.form {\n\t\tpadding: 0 var(--gap) var(--gap);\n\t}\n\n\t.grid {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(3, 1fr);\n\t\tgrid-gap: var(--gap);\n\n\t\tmargin: var(--gap) 0;\n\n\t\t.preview {\n\t\t\tline-height: 0;\n\t\t\tposition: relative;\n\t\t}\n\n\t\timg {\n\t\t\tdisplay: block;\n\t\t\twidth: 100%;\n\t\t\taspect-ratio: 1/1;\n\t\t\tobject-position: center;\n\t\t\tobject-fit: contain;\n\t\t\tborder: 1px solid var(--sep-color);\n\t\t}\n\n\t\tbutton.close {\n\t\t\twidth: 24px;\n\t\t\theight: 24px;\n\t\t\tborder: none;\n\t\t\tbackground-color: transparent;\n\t\t\tcolor: var(--text-color);\n\t\t\ttop: 10px;\n\t\t\tright: 10px;\n\t\t\tposition: absolute;\n\t\t\tcursor: pointer;\n\t\t}\n\t}\n</style>\n"],"names":["load","params","userModule.load","wrapLoadWithSentry","fileStore","writable","storedFiles","derived","isUploading","uploadMessage","uploadSingleFile","file","tree","apiClient","startUpload","count","get","files","retry","totalSize","uploadedSize","store","e","onClick","_","input","$.get","onChange","event","onFileSelected","$.mutable_state","disabled","$.prop","$$props","$.bind_this","input_1","$$value","$.set","on_click","treeId","selected","removeFile","index","newFiles","$uploadMessage","$$render","consequent","$isUploading","$.each","div_2","$storedFiles","idx","button_1","CloseIcon","node_4","consequent_1","$.template_effect","button"],"mappings":"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"}