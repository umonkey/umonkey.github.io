import"../chunks/entry.Dyutd5fJ.js";import{a as c,w as l}from"../chunks/api.rh5dHDph.js";import{e as d}from"../chunks/index.dFTE6C5V.js";import"../chunks/disclose-version.DERG6jGP.js";import{R as m,N as u,T as g,t as b,aD as y,O as a,$ as v}from"../chunks/index.DU9F274A.js";import{h as _}from"../chunks/svelte-head.Q9VbTWXu.js";import{a as h,t as T}from"../chunks/template.C9863Yte.js";import{H as w}from"../chunks/Header.DTRMnEbp.js";import{T as D,a as I,M as $}from"../chunks/Menu.DrqyM1-e.js";(function(){try{var e=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},t=new e.Error().stack;t&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[t]="1d2eed4d-6bb5-4980-aa99-43a0809673b9",e._sentryDebugIdIdentifier="sentry-dbid-1d2eed4d-6bb5-4980-aa99-43a0809673b9")}catch{}})();const p=async({params:e})=>{const t=e.id;t||d(400,{message:"Tree id not specified."});const r=await c.getTree(t);return r.status!==200&&d(404,{message:"Error fetching tree."}),{id:t,tree:r.data}},x=p?l(p):void 0,P=Object.freeze(Object.defineProperty({__proto__:null,load:x},Symbol.toStringTag,{value:"Module"}));var M=T('<!> <!> <!> <!> <p class="svelte-5xy3vn">No history of changes for this tree yet.</p> <p class="svelte-5xy3vn">(This area is under construction.)</p>',1);function R(e,t){m(t,!0);const r=t.data.tree;var s=M();_(O=>{b(()=>y.title=`${r.species??""} - Details`)});var o=u(s);w(o,{title:"Tree"});var i=a(o,2);D(i,{get title(){return r.species}});var n=a(i,2);I(n,{get tree(){return r.id},active:"history"});var f=a(n,2);$(f,{get id(){return r.id}}),v(4),h(e,s),g()}export{R as component,P as universal};
